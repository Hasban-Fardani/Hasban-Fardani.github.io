[{"content":"Apa itu tailwind? tailwind adalah sebuah frameowork css yang memudahkan proses styling website kita, nah tailwind ini memiliki konsep utility first yang artinya tailwind css berfokus utility seperti flex, text-center, padding dan margin. Hal ini cukup menguntungkan bagi developer untuk menggunakan tailwind diataranya:\nefesiensi penulisan kode mempercepat penulisan kode mempermudah membuat web yang responsive Namun dalam penggunaannya seringkali mengalami beberapa kesulitan diataranya\nkode yang terlalu panjang, hal ini dikarekana sebuah element terkadang membutuhkan banyak utility sehingga nama class menjadi panjang Potensi desain yang tidak konsisten, hal ini dikarenakan tailwind sangat bebas sekali digunakan terkadang developer tidak memiliki kemampuan desain yang baik sehingga terjadi ketidakkonsistenan desain. Tailwind Komponent Library untuk menyelesaikan beberapa masalah diatas ada banyak developer yang membuat sebuah komponen library untuk tailwind css, berikut 5 tailwind konponent yang paling sering digunakan:\n1. Tailwind UI Tailwind UI merupakan library komponent resmi dari Tailwind CSS. Library ini menyediakan berbagai macam komponent UI yang siap pakai, seperti tombol, formulir, card, dan modal. Tailwind UI juga menyediakan berbagai macam contoh penggunaan komponent yang dapat membantu developer untuk mempelajari cara menggunakan library ini.\nContoh:\n1 \u0026lt;button href=\u0026#34;#\u0026#34; class=\u0026#34;rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\u0026#34;\u0026gt;Get started\u0026lt;/button\u0026gt; 2. Daisy UI DaisyUI merupakan library komponent Tailwind CSS yang populer dengan desainnya yang modern dan clean. Library ini menyediakan berbagai macam komponent UI yang siap pakai, seperti tombol, formulir, card, dan modal. DaisyUI juga menyediakan berbagai macam tema dan plugin yang dapat membantu developer untuk menyesuaikan tampilan UI mereka.\nContoh:\n1 \u0026lt;button class=\u0026#34;btn\u0026#34;\u0026gt;Button\u0026lt;/button\u0026gt; 3. Flowbite Flowbite merupakan library komponent Tailwind CSS yang populer dengan desainnya yang responsif dan mobile-friendly. Library ini menyediakan berbagai macam komponent UI yang siap pakai, seperti tombol, formulir, card, dan modal. Flowbite juga menyediakan berbagai macam contoh penggunaan komponent yang dapat membantu developer untuk mempelajari cara menggunakan library ini.\nContoh:\n1 \u0026lt;button type=\u0026#34;button\u0026#34; class=\u0026#34;text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800\u0026#34;\u0026gt;Button\u0026lt;/button\u0026gt; 4. Shadcn UI shadcn UI adalah kumpulan komponen UI yang dirancang dengan indah dan dapat langsung digunakan di aplikasi. Namun shadcn ui ini menggunakan react js, jadi anda harus paham terkait react js sebelum bisa menggunakannya. Namun shadcn ui juga memiliki framework alternatif lain selain react yaitu vue dengan shadcn-vue dan svelte dengan shadcn-svelte\nContoh:\n1 2 3 4 5 6 7 8 9 import { Button } from \u0026#34;@/components/ui/button\u0026#34; export default function Page() { return ( \u0026lt;\u0026gt; \u0026lt;Button variant=\u0026#34;outline\u0026#34;\u0026gt;Button\u0026lt;/Button\u0026gt; \u0026lt;/\u0026gt; ); } 5. SaaS Blocks Mirip seperti shadcn yang menggunakan react dan flowbite yang menggunakan full tailwind utility (tidak seperti daisy ui yang menggunakan semantic class name) Sass block menyediakan puluhan tailwind komponent yang gratis serta mudah di kostumisasi\nContoh:\n1 2 3 4 5 6 7 8 9 export default function Page() { return ( \u0026lt;\u0026gt; \u0026lt;button className=\u0026#34;inline-flex cursor-pointer items-center justify-center rounded-xl border-2 border-primary bg-primary px-3 py-2 text-xs font-semibold text-white shadow-sm hover:border-primary-accent hover:bg-primary-accent focus:outline-none focus:ring-2 focus:ring-orange-400/80 focus:ring-offset-0 disabled:opacity-30 disabled:hover:border-primary disabled:hover:bg-primary disabled:hover:text-white dark:focus:ring-white/80\u0026#34;\u0026gt; Button \u0026lt;/button\u0026gt; \u0026lt;/\u0026gt; ); } Penutup sekian artikel terkait 5 library tailwind komponen, semoga bermanfaat.\n","permalink":"https://hasban-fardani.github.io/id/blog/tailwind-component/","summary":"Apa itu tailwind? tailwind adalah sebuah frameowork css yang memudahkan proses styling website kita, nah tailwind ini memiliki konsep utility first yang artinya tailwind css berfokus utility seperti flex, text-center, padding dan margin. Hal ini cukup menguntungkan bagi developer untuk menggunakan tailwind diataranya:\nefesiensi penulisan kode mempercepat penulisan kode mempermudah membuat web yang responsive Namun dalam penggunaannya seringkali mengalami beberapa kesulitan diataranya\nkode yang terlalu panjang, hal ini dikarekana sebuah element terkadang membutuhkan banyak utility sehingga nama class menjadi panjang Potensi desain yang tidak konsisten, hal ini dikarenakan tailwind sangat bebas sekali digunakan terkadang developer tidak memiliki kemampuan desain yang baik sehingga terjadi ketidakkonsistenan desain.","title":"Tailwind Component Library"},{"content":"Apa itu TCL? TCL atau Transaction Control Language adalah serangkaian perintah atau query untuk mengendalikan transaksi. Diantaranya adalah:\nSTART TRANSACTION, untuk membuat transaksi COMMIT, untuk menyimpan perubahan dari transaksi ROLLBACK, untuk mengembalikan perubahan dari transaksi SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk menandai langkah dengan nama tertentu saat menggunakan transaksi ROLLBACK TO SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk mengembalikan proses ke langkah berdasarkan nama savepoint. Mengapa kita perlu menggunakan TCL? Konsistensi Data: TCL memastikan bahwa perubahan dalam transaksi dilakukan bersamaan atau tidak sama sekali. Perintah COMMIT mengonfirmasi perubahan, sedangkan ROLLBACK membatalkannya. Ini menjaga konsistensi data, mencegah kegagalan atau kesalahan merusak data. Kekokohan Database: TCL membantu menjaga kekokohan database dalam sistem dengan banyak transaksi bersamaan. COMMIT dan ROLLBACK mengontrol cara menyimpan dan membatalkan perubahan data. Hal ini meminimalkan risiko data rusak atau tidak konsisten. Manajemen Transaksi: TCL memungkinkan pengguna untuk mengelola transaksi secara efektif. Contoh Penggunaan Disini saya akan contohkan menggunakan table siswa dengan data sebagai berikut: untuk contoh praktek ini saya menggunakan 2 cara yaitu melalui terminal/CLI dan menggunakan PHPMyAdmin sebagai perbandingan.\nSTART TRANSACTION dan COMMIT sekilas tidak ada yang spesial namunn ketika saya mencoba menjalankan perintah SELECT * from siswa; di phpmyadmin tepat setelah saya menulis kode insert hasilnya seperti ini: yapp data siswa bernama leon masih belum muncul, hal ini dikarenakan transaksi tersebut belum di commit\nnamun setelah melakukan commit maka data tersebut akan muncul juga didalam saat kita SELECT di phpmyadmin ROLLBACK penjelasan kode:\nSTART TRANSACTION memulai transaksi SELECT * from siswa berfungsi untuk mengambil seluruh data dari tabel siswa INSERT INTO siswa VALUES ('fitra', 'XI RPL 1', 'fitra@example.co', '2008-06-21'); berfungsi untuk menambahkan data ke table siswa dengan value yg diberikan ROLLBACK mengambalikan data ke semula sebelum transaksi ","permalink":"https://hasban-fardani.github.io/id/blog/tcl-mysql/","summary":"Apa itu TCL? TCL atau Transaction Control Language adalah serangkaian perintah atau query untuk mengendalikan transaksi. Diantaranya adalah:\nSTART TRANSACTION, untuk membuat transaksi COMMIT, untuk menyimpan perubahan dari transaksi ROLLBACK, untuk mengembalikan perubahan dari transaksi SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk menandai langkah dengan nama tertentu saat menggunakan transaksi ROLLBACK TO SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk mengembalikan proses ke langkah berdasarkan nama savepoint. Mengapa kita perlu menggunakan TCL? Konsistensi Data: TCL memastikan bahwa perubahan dalam transaksi dilakukan bersamaan atau tidak sama sekali.","title":"TCL (Transaction Control Language) di MYSQL"},{"content":"Apa itu Dokumentasi Dokumentasi secara singkat adalah proses pengumpulan, pengelolaan dan penyimpanan informasi, sumber.\nDalam dunia pemrogramman para programmer biasanya digunakan untuk menjelaskan kode yang telah mereka buat entah itu per blok kode atau bisa juga dokumentasi project. Hal ini sangat membantu programmer dalam berkomunikasi antar tim, bayangkan saja jika anda menulis kode dengan beberapa orang sekaligus dimana mereka memiliki pemikiran masing - masing pasti akan sulit jika tidak ada panduan khusus bagaimana sebuah kode itu berjalan. Selain itu dokumentasi bisa berguna untuk bahan pengingat agar para developer tidak lupa cara kerja kode yang telah mereka tulis sendiri.\nMengapa penting Seperti yang telah dijelaskan sebelumnya bahwa hal ini sangat penting karna memiliki banyak manfaat, diantaranya adalah sebagai \u0026lsquo;buku panduan\u0026rsquo; dan pengingat untuk kode yang mereka tulis, jika tidak orang mungkin tidak akan mengerti dan bahkan programmer itu sendiri lupa mengapa waktu dulu dia menulis kode tersebut dengan cara demikian.\nJenis - Jenis Dokumentasi Berikut beberapa jenis dokumentasi yang biasanya dipakai para developer:\nDokumentasi Kode (Code Documentation): Ini mencakup komentar di dalam kode sumber yang menjelaskan fungsionalitas, algoritma, dan detail implementasi. Dokumentasi kode membantu pengembang lain atau bahkan diri sendiri di masa depan untuk memahami bagaimana kode bekerja.\nDokumentasi API (Application Programming Interface): Dokumentasi ini menjelaskan cara menggunakan API yang dibuat, termasuk daftar fungsi, parameter yang diperlukan, dan respons yang diharapkan.\nDokumentasi Desain (Design Documentation): Dokumentasi ini mencakup gambaran umum tentang struktur perangkat lunak, diagram aliran data, dan desain sistem. Ini membantu pengembang memahami konsep dan arsitektur perangkat lunak.\nDokumentasi Pengguna (User Documentation): Ini adalah dokumen untuk pengguna akhir yang menjelaskan cara menggunakan perangkat lunak, termasuk panduan pengguna, tutorial, dan FAQ.\nDokumentasi Proyek (Project Documentation): Dokumentasi ini mencakup segala sesuatu yang berkaitan dengan manajemen proyek, seperti rencana proyek, jadwal, dan laporan status.\nDokumentasi Persyaratan (Requirements Documentation): Ini mencakup dokumen yang menjelaskan persyaratan fungsional dan non-fungsional dari perangkat lunak yang akan dikembangkan.\n","permalink":"https://hasban-fardani.github.io/id/blog/mengapa-dokumentasi-penting-untuk-developer/","summary":"Apa itu Dokumentasi Dokumentasi secara singkat adalah proses pengumpulan, pengelolaan dan penyimpanan informasi, sumber.\nDalam dunia pemrogramman para programmer biasanya digunakan untuk menjelaskan kode yang telah mereka buat entah itu per blok kode atau bisa juga dokumentasi project. Hal ini sangat membantu programmer dalam berkomunikasi antar tim, bayangkan saja jika anda menulis kode dengan beberapa orang sekaligus dimana mereka memiliki pemikiran masing - masing pasti akan sulit jika tidak ada panduan khusus bagaimana sebuah kode itu berjalan.","title":"Mengapa Dokumentasi sangat penting untuk"},{"content":"Halo selamat datang di blog pribadi saya, disini saya akan menulis tentang berbagai hal dalam dunia teknologi khususnya pemrogramman. Oiya sebelumnya perkenalkan nama saya Hasban Fardani, saat ini saya masih bersekolah di SMKN 11 Bandung kelas 11 jurusan RPL (Rekayasa Perangkat Lunak). Hobi saya adalah nonton anime, baca manga, dan ngoding.\n","permalink":"https://hasban-fardani.github.io/id/blog/welcome-to-my-blog/","summary":"Selamat datang di blog pribadi saya","title":"Selamat Datang di Blog"},{"content":"","permalink":"https://hasban-fardani.github.io/id/achievements/","summary":"Pencapaian yang pernah saya raih","title":"Archievement"},{"content":"","permalink":"https://hasban-fardani.github.io/id/projects/education-landing-page/","summary":"Hasil landing page saat lomba liga SMK slicing brawl stage","title":"Landing page web edukasi"},{"content":"","permalink":"https://hasban-fardani.github.io/id/projects/sarpras/","summary":"Aplikasi manajemen sarana prasarana untuk sekolah","title":"sarpras"},{"content":"","permalink":"https://hasban-fardani.github.io/id/certificates/","summary":"Sertifikat","title":"Sertifikat"},{"content":"Hi saya Hasban Fardani, seorang full stack developer. Saat ini saya masih bersekolah di SMKN 11 Bandung\n","permalink":"https://hasban-fardani.github.io/id/about/","summary":"Tentang","title":"Tentang"}]