[{"content":"Apa itu TCL? TCL atau Transaction Control Language adalah serangkaian perintah atau query untuk mengendalikan transaksi. Diantaranya adalah:\nSTART TRANSACTION, untuk membuat transaksi COMMIT, untuk menyimpan perubahan dari transaksi ROLLBACK, untuk mengembalikan perubahan dari transaksi SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk menandai langkah dengan nama tertentu saat menggunakan transaksi ROLLBACK TO SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk mengembalikan proses ke langkah berdasarkan nama savepoint. Mengapa kita perlu menggunakan TCL? Konsistensi Data: TCL memastikan bahwa perubahan dalam transaksi dilakukan bersamaan atau tidak sama sekali. Perintah COMMIT mengonfirmasi perubahan, sedangkan ROLLBACK membatalkannya. Ini menjaga konsistensi data, mencegah kegagalan atau kesalahan merusak data. Kekokohan Database: TCL membantu menjaga kekokohan database dalam sistem dengan banyak transaksi bersamaan. COMMIT dan ROLLBACK mengontrol cara menyimpan dan membatalkan perubahan data. Hal ini meminimalkan risiko data rusak atau tidak konsisten. Manajemen Transaksi: TCL memungkinkan pengguna untuk mengelola transaksi secara efektif. Contoh Penggunaan Disini saya akan contohkan menggunakan table siswa dengan data sebagai berikut: untuk contoh praktek ini saya menggunakan 2 cara yaitu melalui terminal/CLI dan menggunakan PHPMyAdmin sebagai perbandingan.\nSTART TRANSACTION dan COMMIT sekilas tidak ada yang spesial namunn ketika saya mencoba menjalankan perintah SELECT * from siswa; di phpmyadmin tepat setelah saya menulis kode insert hasilnya seperti ini: yapp data siswa bernama leon masih belum muncul, hal ini dikarenakan transaksi tersebut belum di commit\nnamun setelah melakukan commit maka data tersebut akan muncul juga didalam saat kita SELECT di phpmyadmin ROLLBACK penjelasan kode:\nSTART TRANSACTION memulai transaksi SELECT * from siswa berfungsi untuk mengambil seluruh data dari tabel siswa INSERT INTO siswa VALUES ('fitra', 'XI RPL 1', 'fitra@example.co', '2008-06-21'); berfungsi untuk menambahkan data ke table siswa dengan value yg diberikan ROLLBACK mengambalikan data ke semula sebelum transaksi ","permalink":"https://hasban-fardani.github.io/id/blog/tcl-mysql/","summary":"Apa itu TCL? TCL atau Transaction Control Language adalah serangkaian perintah atau query untuk mengendalikan transaksi. Diantaranya adalah:\nSTART TRANSACTION, untuk membuat transaksi COMMIT, untuk menyimpan perubahan dari transaksi ROLLBACK, untuk mengembalikan perubahan dari transaksi SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk menandai langkah dengan nama tertentu saat menggunakan transaksi ROLLBACK TO SAVEPOINT \u0026lt;nama_save_point\u0026gt;, untuk mengembalikan proses ke langkah berdasarkan nama savepoint. Mengapa kita perlu menggunakan TCL? Konsistensi Data: TCL memastikan bahwa perubahan dalam transaksi dilakukan bersamaan atau tidak sama sekali.","title":"TCL (Transaction Control Language) di MYSQL"},{"content":"Apa itu Dokumentasi Dokumentasi secara singkat adalah proses pengumpulan, pengelolaan dan penyimpanan informasi, sumber.\nDalam dunia pemrogramman para programmer biasanya digunakan untuk menjelaskan kode yang telah mereka buat entah itu per blok kode atau bisa juga dokumentasi project. Hal ini sangat membantu programmer dalam berkomunikasi antar tim, bayangkan saja jika anda menulis kode dengan beberapa orang sekaligus dimana mereka memiliki pemikiran masing - masing pasti akan sulit jika tidak ada panduan khusus bagaimana sebuah kode itu berjalan. Selain itu dokumentasi bisa berguna untuk bahan pengingat agar para developer tidak lupa cara kerja kode yang telah mereka tulis sendiri.\nMengapa penting Seperti yang telah dijelaskan sebelumnya bahwa hal ini sangat penting karna memiliki banyak manfaat, diantaranya adalah sebagai \u0026lsquo;buku panduan\u0026rsquo; dan pengingat untuk kode yang mereka tulis, jika tidak orang mungkin tidak akan mengerti dan bahkan programmer itu sendiri lupa mengapa waktu dulu dia menulis kode tersebut dengan cara demikian.\nJenis - Jenis Dokumentasi Berikut beberapa jenis dokumentasi yang biasanya dipakai para developer:\nDokumentasi Kode (Code Documentation): Ini mencakup komentar di dalam kode sumber yang menjelaskan fungsionalitas, algoritma, dan detail implementasi. Dokumentasi kode membantu pengembang lain atau bahkan diri sendiri di masa depan untuk memahami bagaimana kode bekerja.\nDokumentasi API (Application Programming Interface): Dokumentasi ini menjelaskan cara menggunakan API yang dibuat, termasuk daftar fungsi, parameter yang diperlukan, dan respons yang diharapkan.\nDokumentasi Desain (Design Documentation): Dokumentasi ini mencakup gambaran umum tentang struktur perangkat lunak, diagram aliran data, dan desain sistem. Ini membantu pengembang memahami konsep dan arsitektur perangkat lunak.\nDokumentasi Pengguna (User Documentation): Ini adalah dokumen untuk pengguna akhir yang menjelaskan cara menggunakan perangkat lunak, termasuk panduan pengguna, tutorial, dan FAQ.\nDokumentasi Proyek (Project Documentation): Dokumentasi ini mencakup segala sesuatu yang berkaitan dengan manajemen proyek, seperti rencana proyek, jadwal, dan laporan status.\nDokumentasi Persyaratan (Requirements Documentation): Ini mencakup dokumen yang menjelaskan persyaratan fungsional dan non-fungsional dari perangkat lunak yang akan dikembangkan.\n","permalink":"https://hasban-fardani.github.io/id/blog/mengapa-dokumentasi-penting-untuk-developer/","summary":"Apa itu Dokumentasi Dokumentasi secara singkat adalah proses pengumpulan, pengelolaan dan penyimpanan informasi, sumber.\nDalam dunia pemrogramman para programmer biasanya digunakan untuk menjelaskan kode yang telah mereka buat entah itu per blok kode atau bisa juga dokumentasi project. Hal ini sangat membantu programmer dalam berkomunikasi antar tim, bayangkan saja jika anda menulis kode dengan beberapa orang sekaligus dimana mereka memiliki pemikiran masing - masing pasti akan sulit jika tidak ada panduan khusus bagaimana sebuah kode itu berjalan.","title":"Mengapa Dokumentasi sangat penting untuk"},{"content":"Apa Itu Hugo Hugo dibuat menggunakan bahasa pemrogramman Go oleh Steve Francia di tahun 2015 dan sekarang dikembangkan bersama oleh Bj√∏rn Erik Pedersen dan kontributor lainnya. Hugo mirip dengan jekyll dan 11ty. Karna menggunakan go performa dari hugo sangatlah tinggi, ia bisa membuat sebuah page hanya dalam sepersekian milisecond. Gila ga tuh, bayangin kalian punya blog yang udh 10.000 postingan lebih pas dibuild cuman butuh sekitar 2 detik! dan outpunya adalah file HTML jadi ga perlu bayar untuk tempat hosting karena github pages saja sudah cukup.\nNamun bukan karena performa, hugo memiliki fitur CMS atau Content Management System yang sangat powerfull, kamu hanya cukup menulis dalam format markdown lalu hugo akan otomatis mengkonvert ke file html dengan data dinamis didalamnya.\nHugo juga memiliki fitur - fitur keren lainnya seperti taxonomi, internalization,\nContoh website yang menggunakan HUGO cloudflare documentation fireship.io petanikode.com hasban-fardani.github.io Mengapa saya memilih hugo? ringan dan cepat zaman sekarang pembuatan web maupun aplikasi tidak hanya sekedar jadi, namun sekarang kita harus memperhatikan kualitas dan peforma dari web/aplikasi yang kita buat, hal ini disebabkan oleh berkembangnya teknologi. output berupa file statis dengan output file statis memudahkan developer untuk menghosting web tersebut, ditambah tidak perlu konfigurasi yang rumit disisi server komunitas yang baik dan berkembang saat ini hugo setidaknya telah dipakai lebih dari 1.3k developer, dengan 71.2k starts di github repositorynya banyak tempat hosting gratis yap karna dia statis anda bisa menghostingnya dimana saja, bahkan github pages sendiri sudah cukup, namun bila tidak familiar dengan github actions anda bisa menggunakan alternative seperti netlify, vercel dan cloudflare pages Sekian penjelasan dari saya semoga bermanfaat\n","permalink":"https://hasban-fardani.github.io/id/blog/hugo-static-web-generator-tercepat/","summary":"Hugo adalah SSG (Static Site Generator) tercepat hal ini dikarenakan hugo dibuat dari bahasa pemrogramman Go. Selain cepat hugo memiliki banyak fitur menarik lainnya \u0026hellip;","title":"Hugo Static Web Generator Tercepat"},{"content":"Halo selamat datang di blog pribadi saya, disini saya akan menulis tentang berbagai hal dalam dunia teknologi khususnya pemrogramman. Oiya sebelumnya perkenalkan nama saya Hasban Fardani, saat ini saya masih bersekolah di SMKN 11 Bandung kelas 11 jurusan RPL (Rekayasa Perangkat Lunak). Hobi saya adalah nonton anime, baca manga, dan ngoding.\n","permalink":"https://hasban-fardani.github.io/id/blog/welcome-to-my-blog/","summary":"Selamat datang di blog pribadi saya","title":"Selamat Datang di Blog"},{"content":"Hai, saya Hasban Fardani, seorang Fullstack Developer yang bersemangat dengan fokus pada pembuatan aplikasi web yang berkualitas tinggi dan ramah pengguna. Saya bisa menggunakan bahasa pemrogramman seperti Javascript, PHP, Python, dan Go. Saya memiliki keinginan untuk belajar hal baru, dan saya menikmati berbagi pengetahuan dengan orang lain.\nKeterampilan teknis saya meliputi pengembangan front-end dan back-end, memungkinkan saya untuk:\nMerancang dan mengembangkan antarmuka pengguna yang intuitif dan menarik secara visual. Membangun aplikasi web yang kokoh dan scalable. Mengoptimalkan aplikasi untuk kinerja dan efisiensi. Selain keahlian teknis saya, saya juga memiliki:\nKomitmen yang kuat untuk pembelajaran dan perbaikan terus menerus. Semangat kolaboratif dan kemauan untuk bekerja secara efektif dalam tim. Semangat untuk membuat aplikasi yang memiliki dampak positif. Saat ini saya sedang mengerjakan pembuatan situs portofolio pribadi saya, yang akan menampilkan lebih detail keterampilan dan pengalaman saya. Saya selalu antusias untuk terhubung dan belajar dari orang lain, jadi jangan ragu untuk menghubungi saya!\n","permalink":"https://hasban-fardani.github.io/id/about/","summary":"Hai, saya Hasban Fardani, seorang Fullstack Developer yang bersemangat dengan fokus pada pembuatan aplikasi web yang berkualitas tinggi dan ramah pengguna. Saya bisa menggunakan bahasa pemrogramman seperti Javascript, PHP, Python, dan Go. Saya memiliki keinginan untuk belajar hal baru, dan saya menikmati berbagi pengetahuan dengan orang lain.\nKeterampilan teknis saya meliputi pengembangan front-end dan back-end, memungkinkan saya untuk:\nMerancang dan mengembangkan antarmuka pengguna yang intuitif dan menarik secara visual. Membangun aplikasi web yang kokoh dan scalable.","title":"About Me"},{"content":"","permalink":"https://hasban-fardani.github.io/id/achievements/","summary":"Pencapaian yang pernah saya raih","title":"Archievement"},{"content":"","permalink":"https://hasban-fardani.github.io/id/certificates/","summary":"Pencapaian yang pernah saya raih","title":"Archievement"},{"content":"p\n","permalink":"https://hasban-fardani.github.io/id/projects/detail/sarpras/","summary":"p","title":"sarpras"}]